<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>[Jenkins] 1. AWS 인스턴스 생성</title>
    <link href="/2023/03/16/jenkins-aws-instance/"/>
    <url>/2023/03/16/jenkins-aws-instance/</url>
    
    <content type="html"><![CDATA[<h1 id="AWS-Instance"><a href="#AWS-Instance" class="headerlink" title="AWS Instance"></a>AWS Instance</h1><p><strong>Jenkins 인스턴스</strong></p><p><code>Instance Type</code>: t3.medium (2Core&#x2F;4GB Mem&#x2F;8GB EBS)</p><p><code>Security Group Inbound Rule</code>: 22(SSH), 8080(Jenkins)<br><br/></p><h3 id="1-Jenkins-서버-환경-설정"><a href="#1-Jenkins-서버-환경-설정" class="headerlink" title="1. Jenkins 서버 환경 설정"></a>1. Jenkins 서버 환경 설정</h3><p><code>EC2</code> → <code>EC2 인스턴스</code> → <code>인스턴스 실행</code> 클릭<br><br/></p><h3 id="2-이름-설정"><a href="#2-이름-설정" class="headerlink" title="2. 이름 설정"></a>2. 이름 설정</h3><p>Name: <code>jenkins</code></p><p><img src="https://user-images.githubusercontent.com/87232411/225445944-e05cf13a-3a2a-4eba-9de7-e0a7cdba6aaa.png"><br><br/></p><h3 id="3-OS-선택"><a href="#3-OS-선택" class="headerlink" title="3. OS 선택"></a>3. OS 선택</h3><p>OS: <code>Ubuntu Server 22.04 LTS</code></p><p><img src="https://user-images.githubusercontent.com/87232411/225445946-c1013c4a-3c20-45d7-986a-e4e5b526e17a.png"><br><br/></p><h3 id="4-인스턴스-유형-선택"><a href="#4-인스턴스-유형-선택" class="headerlink" title="4. 인스턴스 유형 선택"></a>4. 인스턴스 유형 선택</h3><p>인스턴스 유형: <code>t3.medium</code></p><p><img src="https://user-images.githubusercontent.com/87232411/225445947-e345b828-66de-4360-a8e8-dde6ee2e034f.png"><br><br/></p><h3 id="5-페어-생성"><a href="#5-페어-생성" class="headerlink" title="5. 페어 생성"></a>5. 페어 생성</h3><p>키 페어 생성 → <code>jenkins</code> 이름으로 지정 → CSV 파일 다운로드 → 해당 키 페어 선택</p><p><img src="https://user-images.githubusercontent.com/87232411/225445950-6712e768-0935-4bd7-ba07-36d7354fa39c.png"><br><br/></p><h3 id="6-네트워크-설정-보안-그룹"><a href="#6-네트워크-설정-보안-그룹" class="headerlink" title="6. 네트워크 설정 (보안 그룹)"></a>6. 네트워크 설정 (보안 그룹)</h3><p>네트워크 설정 → <code>편집</code> 클릭</p><p><img src="https://user-images.githubusercontent.com/87232411/225445951-632deeea-33c9-47b8-9fbb-9587eb6caa2a.png"></p><p><code>보안그룹 생성</code> 선택</p><p>보안 그룹 이름: <code>jenkins-security-group</code></p><p>설명: <code>jenkins security group</code></p><p><img src="https://user-images.githubusercontent.com/87232411/225445953-663228e5-1195-4a38-acfe-b05ce504409c.png"></p><p>인바운드 보안 그룹 규칙</p><p>SSH: <code>20</code></p><p>jenkins: <code>8080</code></p><p><img src="https://user-images.githubusercontent.com/87232411/225445957-9fe216a6-888c-4c92-ba4d-d38178e189d7.png"><br><br/></p><h3 id="7-인스턴스-시작"><a href="#7-인스턴스-시작" class="headerlink" title="7. 인스턴스 시작"></a>7. 인스턴스 시작</h3><p><code>인스턴스 시작</code> 클릭</p><p><img src="https://user-images.githubusercontent.com/87232411/225445959-b29614bd-cb88-4ff5-85de-02a6fbd38cab.png"><br><br/></p><h3 id="8-인스턴스-접속"><a href="#8-인스턴스-접속" class="headerlink" title="8. 인스턴스 접속"></a>8. 인스턴스 접속</h3><p>퍼블릭 IPv4 주소 복사</p><p><img src="https://user-images.githubusercontent.com/87232411/225445961-edc3494b-808f-4577-95f2-8e3a2dcf718c.png"></p><p>ssh 접속</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ ssh -i <span class="hljs-string">&#x27;jenkins.pem&#x27;</span> ubuntu@52.79.83.182<br><br>The authenticity of host <span class="hljs-string">&#x27;52.79.83.182 (52.79.83.182)&#x27;</span> can<span class="hljs-string">&#x27;t be established.</span><br><span class="hljs-string">ED25519 key fingerprint is SHA256:Z3hdQyhgtMK/RKBZ85x8wQz8iCRQwAOPMWaL0B6f9wY.</span><br><span class="hljs-string">This key is not known by any other names</span><br><span class="hljs-string">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>AWS</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Terraform</title>
    <link href="/2023/03/08/Terraform/"/>
    <url>/2023/03/08/Terraform/</url>
    
    <content type="html"><![CDATA[<h2 id="1-테라폼의-개요"><a href="#1-테라폼의-개요" class="headerlink" title="1. 테라폼의 개요"></a>1. 테라폼의 개요</h2><p><strong>테라폼(Terraform)</strong> 은 Infrastructure 자동화 도구로서, 클라우드 서비스 및 온프레미스 환경에서 Infrastructure를 코드로 정의하고 프로비저닝하는 데 사용됩니다.</p><tr>Infrastructure 코드(Infrastructure as Code, IaC) 개념을 바탕으로 동작하며, 코드 버전 관리 및 협업, Infrastructure 변경사항 추적 등의 장점을 제공합니다. 다양한 클라우드 서비스(예: AWS, Azure, GCP 등) 및 온프레미스 환경에서 동작하며, 클라우드 서비스별로 제공하는 리소스(예: EC2 인스턴스, S3 버킷 등)를 코드로 정의하여 프로비저닝할 수 있습니다.<h2 id="2-테라폼-설치-및-설정-MacOs"><a href="#2-테라폼-설치-및-설정-MacOs" class="headerlink" title="2. 테라폼 설치 및 설정 (MacOs)"></a>2. 테라폼 설치 및 설정 (MacOs)</h2><p>패키지 저장소인 hashicorp tap 설치 후 terraform 설치</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">brew tap hashicorp/tap<br><br>brew install hashicorp/tap/terraform<br></code></pre></td></tr></table></figure><br/><p>terraform 작동 확인</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">terraform -<span class="hljs-built_in">help</span></span><br>Usage: terraform [global options] &lt;subcommand&gt; [args]<br><br>The available commands for execution are listed below.<br>The primary workflow commands are given first, followed by<br>less common or more advanced commands.<br><br>Main commands:<br>  init          Prepare your working directory for other commands<br>  validate      Check whether the configuration is valid<br>  plan          Show changes required by the current configuration<br>  apply         Create or update infrastructure<br>  destroy       Destroy previously-created infrastructure<br></code></pre></td></tr></table></figure><h2 id="3-Infrastructure-코드-작성"><a href="#3-Infrastructure-코드-작성" class="headerlink" title="3. Infrastructure 코드 작성"></a>3. Infrastructure 코드 작성</h2><p>해당 코드를 실행시키기 위해서는 Docker가 실행되어 있어야 합니다.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">open -a Docker<br></code></pre></td></tr></table></figure><br/><p><code>main.tf</code> 파일 생성</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell">touch main.tf<br><br>vim main.tf<br></code></pre></td></tr></table></figure><br/><p>nginx docker 컨테이너 생성을 위한 코드 작성 후 저장</p><tr/><p><code>image</code>: <strong>nginx:latest</strong><br><code>internal port</code>: <strong>80</strong><br><code>external port</code>: <strong>8000</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><code class="hljs tf">terraform &#123;<br>  required_providers &#123;<br>    docker = &#123;<br>      source  = &quot;kreuzwerker/docker&quot;<br>      version = &quot;~&gt; 2.13.0&quot;<br>    &#125;<br>  &#125;<br>&#125;<br><br>provider &quot;docker&quot; &#123;&#125;<br><br>resource &quot;docker_image&quot; &quot;nginx&quot; &#123;<br>  name         = &quot;nginx:latest&quot;<br>  keep_locally = false<br>&#125;<br><br>resource &quot;docker_container&quot; &quot;nginx&quot; &#123;<br>  image = docker_image.nginx.latest<br>  name  = &quot;nginx&quot;<br>  ports &#123;<br>    internal = 80<br>    external = 8000<br>  &#125;<br>&#125;<br><br></code></pre></td></tr></table></figure><h2 id="4-프로비저닝"><a href="#4-프로비저닝" class="headerlink" title="4. 프로비저닝"></a>4. 프로비저닝</h2><p>프로젝트 초기화</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">terraform init</span><br>Initializing the backend...<br><br>...<br><br>Terraform has been successfully initialized!<br></code></pre></td></tr></table></figure><br/><p>NGINX 서버 컨테이너 프로비저닝</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">terraform apply</span><br>Do you want to perform these actions?<br>  Terraform will perform the actions described above.<br>  Only &#x27;yes&#x27; will be accepted to approve.<br><br>  Enter a value: yes<br><br><br>  Apply complete! Resources: 2 added, 0 changed, 0 destroyed.<br></code></pre></td></tr></table></figure><br/><p>컨테이너 실행 여부 확인</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs shell"><span class="hljs-meta prompt_">$ </span><span class="language-bash">docker ps</span><br>CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                  NAMES<br>fd2b2665dc90   114aa6a9f203   &quot;/docker-entrypoint.…&quot;   23 seconds ago   Up 22 seconds   0.0.0.0:8000-&gt;80/tcp   nginx<br></code></pre></td></tr></table></figure><br/><p>웹 페이지 접속 여부 확인<br><img width="562" src="https://user-images.githubusercontent.com/87232411/223623132-bbd56666-2b43-4112-8df6-d466b77b45c9.png"></p><br/><p>컨테이너 종료</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">terraform destroy<br></code></pre></td></tr></table></figure><h2 id="5-테라폼-모듈"><a href="#5-테라폼-모듈" class="headerlink" title="5. 테라폼 모듈"></a>5. 테라폼 모듈</h2><p>테라폼에서 모듈은 리소스, 변수, 출력값 등을 포함하며, 다른 모듈에서 재사용할 수 있습니다.</p><tr><p>이를 통해 코드 중복을 줄이고, 모듈화된 코드를 관리함으로써 코드를 보다 쉽게 유지보수할 수 있습니다.<br>모듈은 모듈 디렉토리 안에 .tf 파일들로 구성됩니다. 테라폼은 이러한 .tf 파일들을 읽어서 모듈을 로드하고 사용합니다. 모듈은 모듈 내부에서 정의된 리소스와 데이터를 관리하며, 다른 모듈과 변수 및 출력값을 공유할 수 있습니다.</p><p><img src="https://user-images.githubusercontent.com/87232411/223623817-039bbf9b-3891-4270-b8cd-4ed3645677b9.svg"></p><h2 id="6-테라폼-확장성"><a href="#6-테라폼-확장성" class="headerlink" title="6. 테라폼 확장성"></a>6. 테라폼 확장성</h2><p>테라폼은 클라우드 서비스를 비롯한 다양한 Infrastructure를 코드로 정의하여 관리할 수 있는 확장성이 뛰어난 도구입니다.</p><tr><p>클라우드 서비스(예: AWS, Azure, GCP)를 비롯한 다양한 Infrastructure를 지원하며, 확장성과 유연성을 제공하기 위해 모듈화된 코드 구조와 플러그인 아키텍처를 사용하고 있습니다.<br>또한, 테라폼은 Infrastructure 변경사항을 추적하고 코드 버전 관리를 할 수 있는 기능을 제공하여, 대규모 Infrastructure를 효과적으로 관리할 수 있습니다.<br>이러한 확장성과 유연성을 통해, 테라폼은 다양한 Infrastructure 관리 요구사항에 대응할 수 있으며, 새로운 환경에 대한 대응도 빠르게 이루어질 수 있습니다.</p><br/><br/><br/><p><strong>참고자료: ChatGPT, Terraform 공식 사이트</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>Terraform</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
